#doctest.2-matrix_divided.py



	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


	>>> matrix = [[1, 2, 3], [4, 5, 6]]

	Test without any error:
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	Test that matrix is not a list:
	>>> matrix_divided(50, 5)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	Test that divides an integer with a string:
	>>> matrix_divided([[12, 2] [8, 21]], 2)
	Traceback (most recent call last):
	TypeError: list indices must be integers or slices, not tuple

	Test when div is not a number:
	>>> matrix_divided([[12, 2], [5, 8]], "2")
	Traceback (most recent call last):
	TypeError: div must be a number

	Test that divides without div:
	>>> matrix_divided([[3, 9], [12, 3]])
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	Test with an invalid character:
	>>> matrix_divided([[3, “9”], [15, 3]] / 3)
	Traceback (most recent call last):
	SyntaxError: invalid character in identifier

	Test where 3 positionnal argument are given:
	>>> matrix_divided(['nothing'], ['to say'], 2)
	Traceback (most recent call last):
	TypeError: matrix_divided() takes 2 positional arguments but 3 were given

	Test: Miss div:
	>>> matrix_divided(None)
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	Test where div and matrix are missing:
	>>> matrix_divided()
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

	Test with only one list:
	>>> matrix_divided([9, 4], 6)
	Traceback (most recent call last):
	TypeError: 'int' object is not iterable

	Test with non integer:
	>>> matrix_divided([[9, a], [13, 8]], 3)
	Traceback (most recent call last):
	NameError: name 'a' is not defined
